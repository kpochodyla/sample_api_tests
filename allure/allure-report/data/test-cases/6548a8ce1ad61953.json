{"uid":"6548a8ce1ad61953","name":"Register user with POST Request","fullName":"tests.test_register_user#test_register_user","historyId":"8470bfc83a59c93ced6f260470c6fcff","time":{"start":1678533525148,"stop":1678533525307,"duration":159},"descriptionHtml":"\n  <h1>Test Scenario: Register user with POST Request</h1>\n  <h2>Objective</h2>\n  <p>To verify that the Reqres API can create a new user using a POST request, and that the response code and content are valid and accurate.</p>\n  <h2>Preconditions</h2>\n  <ul>\n    <li>The Reqres API is available and accessible.</li>\n  </ul>\n  <h2>Test Steps</h2>\n  <ol>\n    <li>Send a POST request to the endpoint for registering a user using the Reqres API, including the test data in the request body.</li>\n    <li>Verify that the response code returned is <code>200 OK</code>, indicating that the request was successful.</li>\n    <li>Verify that the response content returned is in JSON format.</li>\n    <li>Verify that the the response contains the expected properties, such as <code>id</code> and <code>token</code>,</li>\n    <li>Verify that the values of the <code>id</code> property in the response is accurate and match the test data in the request.</li>\n  </ol>\n  <h2>Expected Result</h2>\n  <ul>\n    <li>The POST request to register a new user should return a response code of <code>200 OK</code>.</li>\n    <li>The response content should be in JSON format and contain the expected data for the registered user.</li>\n    <li>The data in the response should contain the expected properties and accurate values.</li>\n  </ul>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"settings","time":{"start":1678533523827,"stop":1678533523827,"duration":0},"status":"passed","steps":[{"name":"Creating instance of TestSettings","time":{"start":1678533523827,"stop":1678533523827,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"descriptionHtml":"\n  <h1>Test Scenario: Register user with POST Request</h1>\n  <h2>Objective</h2>\n  <p>To verify that the Reqres API can create a new user using a POST request, and that the response code and content are valid and accurate.</p>\n  <h2>Preconditions</h2>\n  <ul>\n    <li>The Reqres API is available and accessible.</li>\n  </ul>\n  <h2>Test Steps</h2>\n  <ol>\n    <li>Send a POST request to the endpoint for registering a user using the Reqres API, including the test data in the request body.</li>\n    <li>Verify that the response code returned is <code>200 OK</code>, indicating that the request was successful.</li>\n    <li>Verify that the response content returned is in JSON format.</li>\n    <li>Verify that the the response contains the expected properties, such as <code>id</code> and <code>token</code>,</li>\n    <li>Verify that the values of the <code>id</code> property in the response is accurate and match the test data in the request.</li>\n  </ol>\n  <h2>Expected Result</h2>\n  <ul>\n    <li>The POST request to register a new user should return a response code of <code>200 OK</code>.</li>\n    <li>The response content should be in JSON format and contain the expected data for the registered user.</li>\n    <li>The data in the response should contain the expected properties and accurate values.</li>\n  </ul>\n","status":"passed","steps":[{"name":"Send POST request","time":{"start":1678533525148,"stop":1678533525306,"duration":158},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/register'"},{"name":"data","value":"{'username': 'eve.holt@reqres.in', 'email': 'eve.holt@reqres.in', 'password': 'Eve'}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check response status code","time":{"start":1678533525307,"stop":1678533525307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"status_code","value":"200"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check response headers","time":{"start":1678533525307,"stop":1678533525307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"headers_name","value":"'Content-type'"},{"name":"headers","value":"'application/json; charset=utf-8'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check expected properties in object","time":{"start":1678533525307,"stop":1678533525307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"object","value":"{'id': 4, 'token': 'QpwL5tke4Pnpja7X4'}"},{"name":"expected_properties","value":"['id', 'token']"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check if values are equal","time":{"start":1678533525307,"stop":1678533525307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"first_value","value":"4"},{"name":"second_value","value":"4"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_register_user"},{"name":"host","value":"XeroLinux"},{"name":"thread","value":"36695-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_register_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Passed tests","matchedStatuses":["passed"],"flaky":false}],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":11},"items":[{"uid":"581dc5bfa258d9b4","status":"passed","time":{"start":1678530838297,"stop":1678530838464,"duration":167}},{"uid":"4c4ab262d8e6cc74","status":"passed","time":{"start":1678530826290,"stop":1678530826463,"duration":173}},{"uid":"8d823cad22d58d13","status":"passed","time":{"start":1678530815354,"stop":1678530815620,"duration":266}},{"uid":"c274a9c21eec2e16","status":"passed","time":{"start":1678530803157,"stop":1678530803315,"duration":158}},{"uid":"e5a80be6e22ff7c8","status":"passed","time":{"start":1678530793208,"stop":1678530793371,"duration":163}},{"uid":"8c747bb3693f746e","status":"passed","time":{"start":1678530788979,"stop":1678530789145,"duration":166}},{"uid":"f4c9ff73423959c8","status":"passed","time":{"start":1678530784602,"stop":1678530784766,"duration":164}},{"uid":"5a43296d41a49df","status":"passed","time":{"start":1678530773911,"stop":1678530774222,"duration":311}},{"uid":"f8621b39a08a5c2a","status":"passed","time":{"start":1678530599628,"stop":1678530599935,"duration":307}},{"uid":"3c6a42ade0c62ca1","status":"passed","time":{"start":1678527081739,"stop":1678527081935,"duration":196}}]},"tags":[]},"source":"6548a8ce1ad61953.json","parameterValues":[]}