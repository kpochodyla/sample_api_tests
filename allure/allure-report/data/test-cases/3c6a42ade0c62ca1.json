{"uid":"3c6a42ade0c62ca1","name":"Register user with POST Request","fullName":"tests.test_register_user#test_register_user","historyId":"8470bfc83a59c93ced6f260470c6fcff","time":{"start":1678527081739,"stop":1678527081935,"duration":196},"descriptionHtml":"\n  <h1>Test Scenario: Register user with POST Request</h1>\n  <h2>Objective</h2>\n  <p>To verify that the Reqres API can create a new user using a POST request, and that the response code and content are valid and accurate.</p>\n  <h2>Preconditions</h2>\n  <ul>\n    <li>The Reqres API is available and accessible.</li>\n  </ul>\n  <h2>Test Steps</h2>\n  <ol>\n    <li>Send a POST request to the endpoint for registering a user using the Reqres API, including the test data in the request body.</li>\n    <li>Verify that the response code returned is <code>200 OK</code>, indicating that the request was successful.</li>\n    <li>Verify that the response content returned is in JSON format.</li>\n    <li>Verify that the the response contains the expected properties, such as <code>id</code> and <code>token</code>,</li>\n    <li>Verify that the values of the <code>id</code> property in the response is accurate and match the test data in the request.</li>\n  </ol>\n  <h2>Expected Result</h2>\n  <ul>\n    <li>The POST request to register a new user should return a response code of <code>200 OK</code>.</li>\n    <li>The response content should be in JSON format and contain the expected data for the registered user.</li>\n    <li>The data in the response should contain the expected properties and accurate values.</li>\n  </ul>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"settings","time":{"start":1678527081300,"stop":1678527081301,"duration":1},"status":"passed","steps":[{"name":"Creating instance of TestSettings","time":{"start":1678527081300,"stop":1678527081301,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"descriptionHtml":"\n  <h1>Test Scenario: Register user with POST Request</h1>\n  <h2>Objective</h2>\n  <p>To verify that the Reqres API can create a new user using a POST request, and that the response code and content are valid and accurate.</p>\n  <h2>Preconditions</h2>\n  <ul>\n    <li>The Reqres API is available and accessible.</li>\n  </ul>\n  <h2>Test Steps</h2>\n  <ol>\n    <li>Send a POST request to the endpoint for registering a user using the Reqres API, including the test data in the request body.</li>\n    <li>Verify that the response code returned is <code>200 OK</code>, indicating that the request was successful.</li>\n    <li>Verify that the response content returned is in JSON format.</li>\n    <li>Verify that the the response contains the expected properties, such as <code>id</code> and <code>token</code>,</li>\n    <li>Verify that the values of the <code>id</code> property in the response is accurate and match the test data in the request.</li>\n  </ol>\n  <h2>Expected Result</h2>\n  <ul>\n    <li>The POST request to register a new user should return a response code of <code>200 OK</code>.</li>\n    <li>The response content should be in JSON format and contain the expected data for the registered user.</li>\n    <li>The data in the response should contain the expected properties and accurate values.</li>\n  </ul>\n","status":"passed","steps":[{"name":"Send POST request","time":{"start":1678527081739,"stop":1678527081934,"duration":195},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/register'"},{"name":"data","value":"{'username': 'janet.weaver@reqres.in', 'email': 'janet.weaver@reqres.in', 'password': 'Janet'}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check response status code","time":{"start":1678527081934,"stop":1678527081934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"status_code","value":"200"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check response headers","time":{"start":1678527081934,"stop":1678527081935,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"headers_name","value":"'Content-type'"},{"name":"headers","value":"'application/json; charset=utf-8'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check expected properties in object","time":{"start":1678527081935,"stop":1678527081935,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"object","value":"{'id': 2, 'token': 'QpwL5tke4Pnpja7X2'}"},{"name":"expected_properties","value":"['id', 'token']"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check if values are equal","time":{"start":1678527081935,"stop":1678527081935,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"first_value","value":"2"},{"name":"second_value","value":"2"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_register_user"},{"name":"host","value":"XeroLinux"},{"name":"thread","value":"22267-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_register_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Passed tests","matchedStatuses":["passed"],"flaky":false}],"tags":[]},"source":"3c6a42ade0c62ca1.json","parameterValues":[]}